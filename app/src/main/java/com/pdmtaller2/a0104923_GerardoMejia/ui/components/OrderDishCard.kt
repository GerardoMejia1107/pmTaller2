package com.pdmtaller2.a0104923_GerardoMejia.ui.componentsimport android.widget.Toastimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxHeightimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.foundation.shape.RoundedCornerShapeimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.AddCircleimport androidx.compose.material.icons.filled.Deleteimport androidx.compose.material3.Cardimport androidx.compose.material3.CardDefaultsimport androidx.compose.material3.Iconimport androidx.compose.material3.IconButtonimport androidx.compose.material3.Surfaceimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.layout.ContentScaleimport androidx.compose.ui.platform.LocalContextimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.unit.dpimport coil3.compose.AsyncImageimport com.pdmtaller2.a0104923_GerardoMejia.data.Dish@Composablefun OrderDishCard(    dish: Dish,    orderDish: MutableList<Dish>) {    val toastText = "Removido del carrito"    val toastDuration = Toast.LENGTH_SHORT    val toast = Toast.makeText(LocalContext.current, toastText, toastDuration)    Card(        modifier = Modifier            .fillMaxWidth()            .padding(vertical = 8.dp),        shape = RoundedCornerShape(12.dp),        elevation = CardDefaults.cardElevation(4.dp)    ) {        Row {            AsyncImage(                model = dish.imgURL,                contentDescription = dish.name,                modifier = Modifier.size(100.dp),                contentScale = ContentScale.Crop,            )            Column(modifier = Modifier.padding(horizontal = 8.dp, vertical = 4.dp).fillMaxHeight                ().weight(6f)) {                Text(text = dish.name, fontWeight = FontWeight.SemiBold)                Spacer(Modifier.height(4.dp))                Text(text = dish.description)            }            Surface(                color = Color.Transparent,                modifier = Modifier.fillMaxHeight().align(alignment = Alignment.Top).weight(1f)            ) {                IconButton(onClick = {                    orderDish.remove(dish)                    toast.show()                }) {                    Icon(imageVector = Icons.Filled.Delete, contentDescription = "Remove from cart")                }            }        }    }}